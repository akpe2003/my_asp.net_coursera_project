public class User {
    public int Id { get; set; }

    [Required]
    public string Name { get; set; }

    [Required]
    [EmailAddress]
    public string Email { get; set; }

    [Required]
    public string Department { get; set; }
}

[HttpPost]
public ActionResult<User> Create(User user) {
    if (!ModelState.IsValid) return BadRequest(ModelState);
    ...
}

[HttpGet("{id}")]
public ActionResult<User> GetById(int id) {
    try {
        var user = users.FirstOrDefault(u => u.Id == id);
        return user == null ? NotFound() : Ok(user);
    } catch (Exception ex) {
        return StatusCode(500, $"Internal error: {ex.Message}");
    }
}

[HttpGet]
public ActionResult<IEnumerable<User>> GetAll([FromQuery] int page = 1, [FromQuery] int pageSize = 10) {
    var pagedUsers = users.Skip((page - 1) * pageSize).Take(pageSize);
    return Ok(pagedUsers);
}



